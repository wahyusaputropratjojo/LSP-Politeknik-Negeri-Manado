// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              String         @id @default(uuid()) @map("id")
  nama_lengkap    String         @map("nama_lengkap")
  email           String         @unique @map("email")
  password        String         @map("password")
  url_profil_user String?        @map("url_profil_user")
  role            Role           @default(Asesi) @map("role")
  created_at      DateTime       @default(now()) @map("created_at")
  updated_at      DateTime       @updatedAt @map("updated_at")
  auth            Auth[]
  asesi           Asesi?
  asesor          Asesor?
  administrator   Administrator?

  @@map("user")
}

// Asesi
model Asesi {
  id                      String                  @id @default(uuid()) @map("id")
  id_user                 String                  @unique @map("id_user")
  id_data_diri            String                  @unique @map("id_data_diri")
  id_data_pekerjaan       String                  @unique @map("id_data_pekerjaan")
  created_at              DateTime                @default(now()) @map("created_at")
  updated_at              DateTime                @updatedAt @map("updated_at")
  user                    User                    @relation(fields: [id_user], references: [id], onDelete: Cascade)
  data_diri               DataDiri                @relation(fields: [id_data_diri], references: [id], onDelete: Cascade)
  data_pekerjaan          DataPekerjaan           @relation(fields: [id_data_pekerjaan], references: [id], onDelete: Cascade)
  asesi_skema_sertifikasi AsesiSkemaSertifikasi[]

  @@map("asesi")
}

model AsesiSkemaSertifikasi {
  id                                              String                                       @id @default(uuid()) @map("id")
  id_asesi                                        String                                       @map("id_asesi")
  id_skema_sertifikasi                            String                                       @map("id_skema_sertifikasi")
  id_tujuan_asesmen                               String                                       @map("id_tujuan_asesmen")
  is_asesmen_mandiri                              Boolean                                      @default(false) @map("is_asesmen_mandiri")
  is_asesmen_mandiri_selesai                      Boolean                                      @default(false) @map("is_asesmen_mandiri_selesai")
  is_metode_pengujian                             Boolean                                      @default(false) @map("is_metode_pengujian")
  is_observasi_aktivitas_tempat_kerja_selesai     Boolean                                      @default(false) @map("is_observasi_aktivitas_tempat_kerja_selesai")
  is_pertanyaan_lisan_selesai                     Boolean                                      @default(false) @map("is_pertanyaan_lisan_selesai")
  is_pertanyaan_observasi_selesai                 Boolean                                      @default(false) @map("is_pertanyaan_observasi_selesai")
  is_pertanyaan_tertulis_esai_selesai             Boolean                                      @default(false) @map("is_pertanyaan_tertulis_esai_selesai")
  is_evaluasi_pertanyaan_tertulis_esai_selesai    Boolean                                      @default(false) @map("is_evaluasi_pertanyaan_tertulis_esai_selesai")
  is_pertanyaan_tertulis_pilihan_ganda_selesai    Boolean                                      @default(false) @map("is_pertanyaan_tertulis_pilihan_ganda_selesai")
  is_praktik_demonstrasi_selesai                  Boolean                                      @default(false) @map("is_praktik_demonstrasi_selesai")
  is_punya_asesor                                 Boolean                                      @default(false) @map("is_punya_asesor")
  is_proyek_terkait_pekerjaan_selesai             Boolean                                      @default(false) @map("is_proyek_terkait_pekerjaan_selesai")
  is_verifikasi_berkas                            Boolean                                      @default(false) @map("is_verifikasi_berkas")
  is_verifikasi_portofolio_selesai                Boolean                                      @default(false) @map("is_verifikasi_portofolio_selesai")
  is_evaluasi_asesi_selesai                       Boolean                                      @default(false) @map("is_evaluasi_asesi_selesai")
  is_tidak_kompeten                               Boolean                                      @default(false) @map("is_tidak_kompeten")
  is_kompeten                                     Boolean                                      @default(false) @map("is_kompeten")
  is_berkas_memenuhi_syarat                       Boolean                                      @default(false) @map("is_berkas_memenuhi_syarat")
  is_praktik_demonstrasi                          Boolean                                      @default(false) @map("is_praktik_demonstrasi")
  is_portofolio                                   Boolean                                      @default(false) @map("is_portofolio")
  is_uji_tertulis                                 Boolean                                      @default(false) @map("is_uji_tertulis")
  is_wawancara                                    Boolean                                      @default(false) @map("is_wawancara")
  created_at                                      DateTime                                     @default(now()) @map("created_at")
  updated_at                                      DateTime                                     @updatedAt @map("updated_at")
  asesi                                           Asesi                                        @relation(fields: [id_asesi], references: [id], onDelete: Cascade)
  skema_sertifikasi                               SkemaSertifikasi                             @relation(fields: [id_skema_sertifikasi], references: [id], onDelete: Cascade)
  tujuan_asesmen                                  TujuanAsesmen                                @relation(fields: [id_tujuan_asesmen], references: [id], onDelete: Cascade)
  bukti_persyaratan_dasar                         BuktiPersyaratanDasar[]
  portofolio                                      Portofolio[]
  asesor_asesi                                    AsesorAsesi[]
  asesmen_mandiri                                 AsesmenMandiri[]
  asesi_jawaban_pertanyaan_tertulis_pilihan_ganda AsesiJawabanPertanyaanTertulisPilihanGanda[]
  asesi_jawaban_pertanyaan_tertulis_esai          AsesiJawabanPertanyaanTertulisEsai[]
  asesor_observasi_aktivitas_tempat_kerja         AsesorObservasiAktivitasTempatKerja[]
  asesor_pertanyaan_observasi                     AsesorPertanyaanObservasi[]
  asesor_pertanyaan_lisan                         AsesorPertanyaanLisan[]
  asesor_proyek_terkait_pekerjaan                 AsesorProyekTerkaitPekerjaan[]

  @@map("asesi_skema_sertifikasi")
}

model Portofolio {
  id                           String                       @id @default(uuid()) @map("id")
  id_asesi_skema_sertifikasi   String                       @map("id_asesi_skema_sertifikasi")
  keterangan                   String                       @map("keterangan") @db.Text
  created_at                   DateTime                     @default(now()) @map("created_at")
  updated_at                   DateTime                     @updatedAt @map("updated_at")
  file_portofolio              FilePortofolio[]
  asesor_verifikasi_portofolio AsesorVerifikasiPortofolio[]
  asesi_skema_sertifikasi      AsesiSkemaSertifikasi        @relation(fields: [id_asesi_skema_sertifikasi], references: [id])

  @@map("portofolio")
}

model FilePortofolio {
  id                  String      @id @default(uuid()) @map("id")
  id_portofolio       String      @map("id_portofolio")
  url_file_portofolio String      @map("url_file_portofolio") @db.Text
  created_at          DateTime    @default(now()) @map("created_at")
  updated_at          DateTime    @updatedAt @map("updated_at")
  portofolio          Portofolio? @relation(fields: [id_portofolio], references: [id])

  @@map("file_portofolio")
}

model BuktiPersyaratanDasar {
  id                           String                      @id @default(uuid()) @map("id")
  id_asesi_skema_sertifikasi   String                      @map("id_asesi_skema_sertifikasi")
  id_persyaratan_dasar         String                      @map("id_persyaratan_dasar")
  created_at                   DateTime                    @default(now()) @map("created_at")
  updated_at                   DateTime                    @updatedAt @map("updated_at")
  persyaratan_dasar            PersyaratanDasar            @relation(fields: [id_persyaratan_dasar], references: [id], onDelete: Cascade)
  file_bukti_persyaratan_dasar FileBuktiPersyaratanDasar[]
  asesi_skema_sertifikasi      AsesiSkemaSertifikasi       @relation(fields: [id_asesi_skema_sertifikasi], references: [id], onDelete: Cascade)

  @@map("bukti_persyaratan_dasar")
}

model FileBuktiPersyaratanDasar {
  id                               String                 @id @default(uuid()) @map("id")
  id_bukti_persyaratan_dasar       String                 @map("id_bukti_persyaratan_dasar")
  url_file_bukti_persyaratan_dasar String                 @map("url_file_bukti_persyaratan_dasar") @db.Text
  created_at                       DateTime               @default(now()) @map("created_at")
  updated_at                       DateTime               @updatedAt @map("updated_at")
  bukti_persyaratan_dasar          BuktiPersyaratanDasar? @relation(fields: [id_bukti_persyaratan_dasar], references: [id], onDelete: Cascade)

  @@map("file_bukti_persyaratan_dasar")
}

model AsesmenMandiri {
  id                           String                  @id @default(uuid()) @map("id")
  id_asesi_skema_sertifikasi   String                  @map("id_asesi_skema_sertifikasi")
  id_aktivitas_unit_kompetensi String                  @map("id_aktivitas_unit_kompetensi")
  is_kompeten                  Boolean                 @default(false) @map("is_kompeten")
  aktivitas_unit_kompetensi    AktivitasUnitKompetensi @relation(fields: [id_aktivitas_unit_kompetensi], references: [id], onDelete: Cascade)
  asesi_skema_sertifikasi      AsesiSkemaSertifikasi   @relation(fields: [id_asesi_skema_sertifikasi], references: [id], onDelete: Cascade)

  @@map("asesmen_mandiri")
}

model AsesiJawabanPertanyaanTertulisPilihanGanda {
  id                                           String                                 @id @default(uuid()) @map("id")
  id_asesi_skema_sertifikasi                   String                                 @map("id_asesi_skema_sertifikasi")
  id_jawaban_pertanyaan_tertulis_pilihan_ganda String                                 @map("id_jawaban_pertanyaan_tertulis_pilihan_ganda")
  is_benar                                     Boolean                                @map("is_benar")
  created_at                                   DateTime                               @default(now()) @map("created_at")
  updated_at                                   DateTime                               @updatedAt @map("updated_at")
  asesi_skema_sertifikasi                      AsesiSkemaSertifikasi?                 @relation(fields: [id_asesi_skema_sertifikasi], references: [id], onDelete: Cascade)
  jawaban_pertanyaan_tertulis_pilihan_ganda    JawabanPertanyaanTertulisPilihanGanda? @relation(fields: [id_jawaban_pertanyaan_tertulis_pilihan_ganda], references: [id])

  @@map("asesi_jawaban_pertanyaan_tertulis_pilihan_ganda")
}

model AsesiJawabanPertanyaanTertulisEsai {
  id                          String                  @id @default(uuid()) @map("id")
  id_pertanyaan_tertulis_esai String                  @map("id_pertanyaan_tertulis_esai")
  id_asesi_skema_sertifikasi  String                  @map("id_asesi_skema_sertifikasi")
  jawaban                     String                  @map("jawaban") @db.Text
  is_kompeten                 Boolean                 @default(false) @map("is_kompeten")
  created_at                  DateTime                @default(now()) @map("created_at")
  updated_at                  DateTime                @updatedAt @map("updated_at")
  pertanyaan_tertulis_esai    PertanyaanTertulisEsai? @relation(fields: [id_pertanyaan_tertulis_esai], references: [id], onDelete: Cascade)
  asesi_skema_sertifikasi     AsesiSkemaSertifikasi?  @relation(fields: [id_asesi_skema_sertifikasi], references: [id])

  @@map("asesi_jawaban_pertanyaan_tertulis_esai")
}

// Asesor
model Asesor {
  id                       String              @id @default(uuid()) @map("id")
  id_user                  String              @unique @map("id_user")
  id_data_diri             String?             @unique @map("id_data_diri")
  id_tempat_uji_kompetensi String              @map("id_tempat_uji_kompetensi")
  created_at               DateTime            @default(now()) @map("created_at")
  updated_at               DateTime            @updatedAt @map("updated_at")
  user                     User                @relation(fields: [id_user], references: [id], onDelete: Cascade)
  data_diri                DataDiri?           @relation(fields: [id_data_diri], references: [id], onDelete: Cascade)
  asesor_asesi             AsesorAsesi[]
  tempat_uji_kompetensi    TempatUjiKompetensi @relation(fields: [id_tempat_uji_kompetensi], references: [id], onDelete: Cascade)

  @@map("asesor")
}

model AsesorAsesi {
  id                         String                @id @default(uuid()) @map("id")
  id_asesor                  String                @map("id_asesor")
  id_asesi_skema_sertifikasi String                @map("id_asesi_skema_sertifikasi")
  tanggal_pelaksanaan        DateTime              @map("tanggal_pelaksanaan")
  created_at                 DateTime              @default(now()) @map("created_at")
  updated_at                 DateTime              @updatedAt @map("updated_at")
  asesor                     Asesor                @relation(fields: [id_asesor], references: [id], onDelete: Cascade)
  asesi_skema_sertifikasi    AsesiSkemaSertifikasi @relation(fields: [id_asesi_skema_sertifikasi], references: [id])

  @@map("asesor_asesi")
}

model AsesorObservasiAktivitasTempatKerja {
  id                           String                   @id @default(uuid()) @map("id")
  id_asesi_skema_sertifikasi   String                   @map("id_asesi_skema_sertifikasi")
  id_aktivitas_unit_kompetensi String                   @map("id_aktivitas_unit_kompetensi")
  is_kompeten                  Boolean                  @default(false) @map("is_kompeten")
  created_at                   DateTime                 @default(now()) @map("created_at")
  updated_at                   DateTime                 @updatedAt @map("updated_at")
  asesi_skema_sertifikasi      AsesiSkemaSertifikasi?   @relation(fields: [id_asesi_skema_sertifikasi], references: [id], onDelete: Cascade)
  aktivitas_unit_kompetensi    AktivitasUnitKompetensi? @relation(fields: [id_aktivitas_unit_kompetensi], references: [id], onDelete: Cascade)

  @@map("asesor_observasi_aktivitas_tempat_kerja")
}

model AsesorPertanyaanObservasi {
  id                         String                 @id @default(uuid()) @map("id")
  id_asesi_skema_sertifikasi String                 @map("id_asesi_skema_sertifikasi")
  id_pertanyaan_observasi    String                 @map("id_pertanyaan_observasi")
  is_kompeten                Boolean                @default(false) @map("is_kompeten")
  created_at                 DateTime               @default(now()) @map("created_at")
  updated_at                 DateTime               @updatedAt @map("updated_at")
  asesi_skema_sertifikasi    AsesiSkemaSertifikasi? @relation(fields: [id_asesi_skema_sertifikasi], references: [id], onDelete: Cascade)
  pertanyaan_observasi       PertanyaanObservasi?   @relation(fields: [id_pertanyaan_observasi], references: [id], onDelete: Cascade)

  @@map("asesor_pertanyaan_observasi")
}

model AsesorPertanyaanLisan {
  id                         String                 @id @default(uuid()) @map("id")
  id_asesi_skema_sertifikasi String                 @map("id_asesi_skema_sertifikasi")
  id_pertanyaan_lisan        String                 @map("id_pertanyaan_lisan")
  jawaban_asesi              String                 @map("jawaban_asesi") @db.Text
  is_kompeten                Boolean                @default(false) @map("is_kompeten")
  created_at                 DateTime               @default(now()) @map("created_at")
  updated_at                 DateTime               @updatedAt @map("updated_at")
  asesi_skema_sertifikasi    AsesiSkemaSertifikasi? @relation(fields: [id_asesi_skema_sertifikasi], references: [id], onDelete: Cascade)
  pertanyaan_lisan           PertanyaanLisan?       @relation(fields: [id_pertanyaan_lisan], references: [id], onDelete: Cascade)

  @@map("asesor_pertanyaan_lisan")
}

model AsesorVerifikasiPortofolio {
  id            String      @id @default(uuid()) @map("id")
  id_portofolio String      @map("id_portofolio")
  is_valid      Boolean     @default(false) @map("is_valid")
  is_asli       Boolean     @default(false) @map("is_asli")
  is_terkini    Boolean     @default(false) @map("is_terkini")
  is_memadai    Boolean     @default(false) @map("is_memadai")
  created_at    DateTime    @default(now()) @map("created_at")
  updated_at    DateTime    @updatedAt @map("updated_at")
  portofolio    Portofolio? @relation(fields: [id_portofolio], references: [id], onDelete: Cascade)

  @@map("asesor_verifikasi_portofolio")
}

model AsesorProyekTerkaitPekerjaan {
  id                          String                  @id @default(uuid()) @map("id")
  id_asesi_skema_sertifikasi  String                  @map("id_asesi_skema_sertifikasi")
  id_proyek_terkait_pekerjaan String                  @map("id_proyek_terkait_pekerjaan")
  umpan_balik_asesi           String                  @map("umpan_balik_asesi") @db.Text
  created_at                  DateTime                @default(now()) @map("created_at")
  updated_at                  DateTime                @updatedAt @map("updated_at")
  asesi_skema_sertifikasi     AsesiSkemaSertifikasi?  @relation(fields: [id_asesi_skema_sertifikasi], references: [id], onDelete: Cascade)
  proyek_terkait_pekerjaan    ProyekTerkaitPekerjaan? @relation(fields: [id_proyek_terkait_pekerjaan], references: [id], onDelete: Cascade)

  @@map("asesor_proyek_terkait_pekerjaan")
}

// Administrator
model Administrator {
  id                       String              @id @default(uuid()) @map("id")
  id_user                  String              @unique @map("id_user")
  id_data_diri             String?             @unique @map("id_data_diri")
  id_tempat_uji_kompetensi String              @map("id_tempat_uji_kompetensi")
  created_at               DateTime            @default(now()) @map("created_at")
  updated_at               DateTime            @updatedAt @map("updated_at")
  user                     User                @relation(fields: [id_user], references: [id], onDelete: Cascade)
  tempat_uji_kompetensi    TempatUjiKompetensi @relation(fields: [id_tempat_uji_kompetensi], references: [id], onDelete: Cascade)
  data_diri                DataDiri?           @relation(fields: [id_data_diri], references: [id], onDelete: Cascade)

  @@map("administrator")
}

// All Role
model DataDiri {
  id                        String                 @id @default(uuid()) @map("id")
  id_alamat                 String                 @unique @map("id_alamat")
  id_jenis_kelamin          String                 @map("id_jenis_kelamin")
  id_kebangsaan             String                 @map("id_kebangsaan")
  id_kualifikasi_pendidikan String                 @map("id_kualifikasi_pendidikan")
  nik                       String                 @map("nik")
  nomor_telepon             String                 @map("nomor_telepon")
  tanggal_lahir             DateTime               @map("tanggal_lahir")
  tempat_lahir              String                 @map("tempat_lahir")
  created_at                DateTime               @default(now()) @map("created_at")
  updated_at                DateTime               @updatedAt @map("updated_at")
  alamat                    Alamat                 @relation(fields: [id_alamat], references: [id], onDelete: Cascade)
  negara                    Negara?                @relation(fields: [id_kebangsaan], references: [id], onDelete: Cascade)
  jenis_kelamin             JenisKelamin?          @relation(fields: [id_jenis_kelamin], references: [id], onDelete: Cascade)
  kualifikasi_pendidikan    KualifikasiPendidikan? @relation(fields: [id_kualifikasi_pendidikan], references: [id], onDelete: Cascade)
  asesi                     Asesi?
  asesor                    Asesor?
  administrator             Administrator?

  @@map("data_diri")
}

model DataPekerjaan {
  id                        String   @id @default(uuid()) @map("id")
  id_alamat                 String   @unique @map("id_alamat")
  nama_institusi_perusahaan String   @map("nama_perusahaan")
  jabatan                   String   @map("jabatan")
  nomor_telepon             String   @map("nomor_telepon")
  email                     String   @map("email")
  fax                       String   @map("fax")
  created_at                DateTime @default(now()) @map("created_at")
  updated_at                DateTime @updatedAt @map("updated_at")
  alamat                    Alamat   @relation(fields: [id_alamat], references: [id], onDelete: Cascade)
  asesi                     Asesi?

  @@map("data_pekerjaan")
}

model Alamat {
  id                    String               @id @default(uuid()) @map("id")
  id_provinsi           String               @map("id_provinsi")
  id_kota_kabupaten     String               @map("id_kota_kabupaten")
  id_kecamatan          String               @map("id_kecamatan")
  id_kelurahan_desa     String               @map("id_kelurahan_desa")
  keterangan_lainnya    String               @map("keterangan_lainnya") @db.Text
  created_at            DateTime             @default(now()) @map("created_at")
  updated_at            DateTime             @updatedAt @map("updated_at")
  data_pekerjaan        DataPekerjaan?
  data_diri             DataDiri?
  tempat_uji_kompetensi TempatUjiKompetensi?
  provinsi              Provinsi             @relation(fields: [id_provinsi], references: [id], onDelete: Cascade)
  kota_kabupaten        KotaKabupaten        @relation(fields: [id_kota_kabupaten], references: [id], onDelete: Cascade)
  kecamatan             Kecamatan            @relation(fields: [id_kecamatan], references: [id], onDelete: Cascade)
  kelurahan_desa        KelurahanDesa        @relation(fields: [id_kelurahan_desa], references: [id], onDelete: Cascade)

  @@map("alamat")
}

model Auth {
  id         String   @id @default(uuid()) @map("id")
  id_user    String   @map("id_user")
  token      String   @map("token") @db.Text
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")
  user       User     @relation(fields: [id_user], references: [id], onDelete: Cascade)

  @@map("auth")
}

// Skema Sertifikasi
model TempatUjiKompetensi {
  id                         String             @id @default(uuid()) @map("id")
  id_alamat                  String?            @unique @map("id_alamat")
  kode_tempat_uji_kompetensi String             @map("kode_tempat_uji_kompetensi")
  tempat_uji_kompetensi      String             @map("tempat_uji_kompetensi")
  created_at                 DateTime           @default(now()) @map("created_at")
  updated_at                 DateTime           @updatedAt @map("updated_at")
  alamat                     Alamat?            @relation(fields: [id_alamat], references: [id], onDelete: Cascade)
  skema_sertifikasi          SkemaSertifikasi[]
  asesor                     Asesor[]
  administrator              Administrator[]

  @@map("tempat_uji_kompetensi")
}

model SkemaSertifikasi {
  id                           String                  @id @default(uuid()) @map("id")
  id_tempat_uji_kompetensi     String                  @map("id_tempat_uji_kompetensi")
  kode_skema_sertifikasi       String                  @unique @map("kode_skema_sertifikasi")
  nama_skema_sertifikasi       String                  @map("nama_skema_sertifikasi")
  url_profil_skema_sertifikasi String                  @map("url_profil_skema_sertifikasi")
  created_at                   DateTime                @default(now()) @map("created_at")
  updated_at                   DateTime                @updatedAt @map("updated_at")
  tempat_uji_kompetensi        TempatUjiKompetensi     @relation(fields: [id_tempat_uji_kompetensi], references: [id], onDelete: Cascade)
  unit_kompetensi              UnitKompetensi[]
  persyaratan_dasar            PersyaratanDasar[]
  asesi_skema_sertifikasi      AsesiSkemaSertifikasi[]

  @@map("skema_sertifikasi")
}

model UnitKompetensi {
  id                                String                           @id @default(uuid()) @map("id")
  id_skema_sertifikasi              String                           @map("id_skema_sertifikasi")
  kode_unit_kompetensi              String                           @unique @map("kode_unit_kompetensi")
  nama_unit_kompetensi              String                           @map("nama_unit_kompetensi")
  created_at                        DateTime                         @default(now()) @map("created_at")
  updated_at                        DateTime                         @updatedAt @map("updated_at")
  skema_sertifikasi                 SkemaSertifikasi                 @relation(fields: [id_skema_sertifikasi], references: [id], onDelete: Cascade)
  aktivitas_unit_kompetensi         AktivitasUnitKompetensi[]
  tugas_praktik_demonstrasi         TugasPraktikDemonstrasi[]
  pertanyaan_observasi              PertanyaanObservasi[]
  pertanyaan_tertulis_esai          PertanyaanTertulisEsai[]
  pertanyaan_lisan                  PertanyaanLisan[]
  pertanyaan_tertulis_pilihan_ganda PertanyaanTertulisPilihanGanda[]
  proyek_terkait_pekerjaan          ProyekTerkaitPekerjaan[]

  @@map("unit_kompetensi")
}

model PersyaratanDasar {
  id                      String                  @id @default(uuid()) @map("id")
  id_skema_sertifikasi    String                  @map("id_skema_sertifikasi")
  persyaratan_dasar       String                  @map("persyaratan_dasar") @db.Text
  created_at              DateTime                @default(now()) @map("created_at")
  updated_at              DateTime                @updatedAt @map("updated_at")
  skema_sertifikasi       SkemaSertifikasi        @relation(fields: [id_skema_sertifikasi], references: [id], onDelete: Cascade)
  bukti_persyaratan_dasar BuktiPersyaratanDasar[]

  @@map("persyaratan_dasar")
}

model AktivitasUnitKompetensi {
  id                                      String                                @id @default(uuid()) @map("id")
  id_unit_kompetensi                      String                                @map("id_unit_kompetensi")
  elemen                                  String                                @map("elemen") @db.Text
  created_at                              DateTime                              @default(now()) @map("created_at")
  updated_at                              DateTime                              @updatedAt @map("updated_at")
  unit_kompetensi                         UnitKompetensi                        @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)
  kriteria_unjuk_kerja                    KriteriaUnjukKerja[]
  asesmen_mandiri                         AsesmenMandiri[]
  asesor_observasi_aktivitas_tempat_kerja AsesorObservasiAktivitasTempatKerja[]

  @@map("aktivitas_unit_kompetensi")
}

model KriteriaUnjukKerja {
  id                           String                  @id @default(uuid()) @map("id")
  id_aktivitas_unit_kompetensi String                  @map("id_aktivitas_unit_kompetensi")
  kriteria_unjuk_kerja         String                  @map("kriteria_unjuk_kerja") @db.Text
  created_at                   DateTime                @default(now()) @map("created_at")
  updated_at                   DateTime                @updatedAt @map("updated_at")
  aktivitas_unit_kompetensi    AktivitasUnitKompetensi @relation(fields: [id_aktivitas_unit_kompetensi], references: [id], onDelete: Cascade)

  @@map("kriteria_unjuk_kerja")
}

model TugasPraktikDemonstrasi {
  id                                      String                                @id @default(uuid()) @map("id")
  id_unit_kompetensi                      String                                @map("id_unit_kompetensi")
  skenario                                String                                @map("skenario") @db.Text
  created_at                              DateTime                              @default(now()) @map("created_at")
  updated_at                              DateTime                              @updatedAt @map("updated_at")
  langkah_kerja_tugas_praktik_demonstrasi LangkahKerjaTugasPraktikDemonstrasi[]
  unit_kompetensi                         UnitKompetensi?                       @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)

  @@map("tugas_praktik_demonstrasi")
}

model LangkahKerjaTugasPraktikDemonstrasi {
  id                                        String                                  @id @default(uuid()) @map("id")
  id_tugas_praktik_demonstrasi              String                                  @map("id_tugas_praktik_demonstrasi")
  langkah_kerja                             String                                  @map("langkah_kerja") @db.Text
  created_at                                DateTime                                @default(now()) @map("created_at")
  updated_at                                DateTime                                @updatedAt @map("updated_at")
  tugas_praktik_demonstrasi                 TugasPraktikDemonstrasi                 @relation(fields: [id_tugas_praktik_demonstrasi], references: [id], onDelete: Cascade)
  instruksi_kerja_tugas_praktik_demonstrasi InstruksiKerjaTugasPraktikDemonstrasi[]

  @@map("langkah_kerja_tugas_praktik_demonstrasi")
}

model InstruksiKerjaTugasPraktikDemonstrasi {
  id                                         String                               @id @default(uuid()) @map("id")
  id_langkah_kerja_tugas_praktik_demonstrasi String                               @map("id_langkah_kerja_tugas_praktik_demonstrasi")
  instruksi_kerja                            String                               @map("instruksi_kerja") @db.Text
  created_at                                 DateTime                             @default(now()) @map("created_at")
  updated_at                                 DateTime                             @updatedAt @map("updated_at")
  langkah_kerja_tugas_praktik_demonstrasi    LangkahKerjaTugasPraktikDemonstrasi? @relation(fields: [id_langkah_kerja_tugas_praktik_demonstrasi], references: [id], onDelete: Cascade)

  @@map("instruksi_kerja_tugas_praktik_demonstrasi")
}

model PertanyaanObservasi {
  id                          String                      @id @default(uuid()) @map("id")
  id_unit_kompetensi          String                      @map("id_unit_kompetensi")
  pertanyaan                  String                      @map("pertanyaan") @db.Text
  created_at                  DateTime                    @default(now()) @map("created_at")
  updated_at                  DateTime                    @updatedAt @map("updated_at")
  unit_kompetensi             UnitKompetensi              @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)
  asesor_pertanyaan_observasi AsesorPertanyaanObservasi[]

  @@map("pertanyaan_observasi")
}

model PertanyaanTertulisEsai {
  id                                     String                               @id @default(uuid()) @map("id")
  id_unit_kompetensi                     String                               @map("id_unit_kompetensi")
  pertanyaan                             String                               @map("pertanyaan") @db.Text
  jawaban                                String                               @map("jawaban") @db.Text
  created_at                             DateTime                             @default(now()) @map("created_at")
  updated_at                             DateTime                             @updatedAt @map("updated_at")
  unit_kompetensi                        UnitKompetensi                       @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)
  asesi_jawaban_pertanyaan_tertulis_esai AsesiJawabanPertanyaanTertulisEsai[]

  @@map("pertanyaan_tertulis_esai")
}

model PertanyaanLisan {
  id                      String                  @id @default(uuid()) @map("id")
  id_unit_kompetensi      String                  @map("id_unit_kompetensi")
  pertanyaan              String                  @map("pertanyaan") @db.Text
  jawaban                 String                  @map("jawaban") @db.Text
  created_at              DateTime                @default(now()) @map("created_at")
  updated_at              DateTime                @updatedAt @map("updated_at")
  unit_kompetensi         UnitKompetensi          @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)
  asesor_pertanyaan_lisan AsesorPertanyaanLisan[]

  @@map("pertanyaan_lisan")
}

model PertanyaanTertulisPilihanGanda {
  id                                        String                                  @id @default(uuid()) @map("id")
  id_unit_kompetensi                        String                                  @map("id_unit_kompetensi")
  pertanyaan                                String                                  @map("pertanyaan") @db.Text
  created_at                                DateTime                                @default(now()) @map("created_at")
  updated_at                                DateTime                                @updatedAt @map("updated_at")
  unit_kompetensi                           UnitKompetensi                          @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)
  jawaban_pertanyaan_tertulis_pilihan_ganda JawabanPertanyaanTertulisPilihanGanda[]

  @@map("pertanyaan_tertulis_pilihan_ganda")
}

model JawabanPertanyaanTertulisPilihanGanda {
  id                                              String                                       @id @default(uuid()) @map("id")
  id_pertanyaan_tertulis                          String                                       @map("id_pertanyaan_tulis")
  jawaban                                         String                                       @map("jawaban") @db.Text
  is_benar                                        Boolean                                      @map("is_benar")
  created_at                                      DateTime                                     @default(now()) @map("created_at")
  updated_at                                      DateTime                                     @updatedAt @map("updated_at")
  pertanyaan_tertulis_pilihan_ganda               PertanyaanTertulisPilihanGanda               @relation(fields: [id_pertanyaan_tertulis], references: [id], onDelete: Cascade)
  asesi_jawaban_pertanyaan_tertulis_pilihan_ganda AsesiJawabanPertanyaanTertulisPilihanGanda[]

  @@map("jawaban_pertanyaan_tertulis_pilihan_ganda")
}

model TujuanAsesmen {
  id                      String                  @id @default(uuid()) @map("id")
  tujuan                  String                  @map("tujuan") @db.Text
  created_at              DateTime                @default(now()) @map("created_at")
  updated_at              DateTime                @updatedAt @map("updated_at")
  asesi_skema_sertifikasi AsesiSkemaSertifikasi[]

  @@map("tujuan_asesmen")
}

model ProyekTerkaitPekerjaan {
  id                              String                         @id @default(uuid()) @map("id")
  id_unit_kompetensi              String                         @map("id_unit_kompetensi")
  persiapan                       String                         @map("persiapan") @db.Text
  demonstrasi                     String                         @map("demonstrasi") @db.Text
  created_at                      DateTime                       @default(now()) @map("created_at")
  updated_at                      DateTime                       @updatedAt @map("updated_at")
  unit_kompetensi                 UnitKompetensi                 @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)
  asesor_proyek_terkait_pekerjaan AsesorProyekTerkaitPekerjaan[]

  @@map("proyek_terkait_pekerjaan")
}

model KualifikasiPendidikan {
  id                     String     @id @default(uuid()) @map("id")
  kualifikasi_pendidikan String     @map("kualifikasi_pendidikan")
  data_diri              DataDiri[]

  @@map("kualifikasi_pendidikan")
}

model JenisKelamin {
  id            String     @id @default(uuid()) @map("id")
  jenis_kelamin String     @map("jenis_kelamin")
  data_diri     DataDiri[]

  @@map("jenis_kelamin")
}

model Negara {
  id         String     @id @map("id")
  nama       String     @map("nama")
  kebangsaan DataDiri[]

  @@map("negara")
}

model Provinsi {
  id             String          @id @map("id")
  nama           String          @map("nama")
  created_at     DateTime        @default(now()) @map("created_at")
  updated_at     DateTime        @updatedAt @map("updated_at")
  kota_kabupaten KotaKabupaten[]
  alamat         Alamat[]

  @@map("provinsi")
}

model KotaKabupaten {
  id          String      @id @map("id")
  id_provinsi String      @map("id_provinsi")
  nama        String      @map("nama")
  created_at  DateTime    @default(now()) @map("created_at")
  updated_at  DateTime    @updatedAt @map("updated_at")
  provinsi    Provinsi    @relation(fields: [id_provinsi], references: [id], onDelete: Cascade)
  kecamatan   Kecamatan[]
  alamat      Alamat[]

  @@map("kota_kabupaten")
}

model Kecamatan {
  id                String          @id @map("id")
  id_kota_kabupaten String          @map("id_kota_kabupaten")
  nama              String          @map("nama")
  created_at        DateTime        @default(now()) @map("created_at")
  updated_at        DateTime        @updatedAt @map("updated_at")
  kota_kabupaten    KotaKabupaten   @relation(fields: [id_kota_kabupaten], references: [id], onDelete: Cascade)
  kelurahan_desa    KelurahanDesa[]
  alamat            Alamat[]

  @@map("kecamatan")
}

model KelurahanDesa {
  id           String    @id @map("id")
  id_kecamatan String    @map("id_kecamatan")
  nama         String    @map("nama")
  created_at   DateTime  @default(now()) @map("created_at")
  updated_at   DateTime  @updatedAt @map("updated_at")
  kecamatan    Kecamatan @relation(fields: [id_kecamatan], references: [id], onDelete: Cascade)
  alamat       Alamat[]

  @@map("kelurahan_desa")
}

// Enum
enum Role {
  Asesi
  Asesor
  Administrator
}
