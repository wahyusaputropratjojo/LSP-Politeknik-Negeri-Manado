// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid()) @map("id")
  email      String   @unique @map("email")
  password   String   @map("password")
  role       Role     @default(Peserta) @map("role")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")
  profil     Profil?
  auth       Auth[]

  @@map("user")
}

model Profil {
  id         String   @id @default(uuid()) @map("id")
  id_user    String   @unique @map("id_user")
  nama       String   @map("nama")
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")
  user       User     @relation(fields: [id_user], references: [id], onDelete: Cascade)

  @@map("profil")
}

model Auth {
  id         String   @id @default(uuid()) @map("id")
  id_user    String   @map("id_user")
  token      String   @map("token") @db.Text
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")
  user       User     @relation(fields: [id_user], references: [id], onDelete: Cascade)

  @@map("auth")
}

model SkemaSertifikasi {
  id                     String           @id @default(uuid()) @map("id")
  kode_skema_sertifikasi String           @unique @map("kode")
  nama_skema_sertifikasi String           @map("nama")
  created_at             DateTime         @default(now()) @map("created_at")
  updated_at             DateTime         @updatedAt @map("updated_at")
  unit_kompetensi        UnitKompetensi[]

  @@map("skema_sertifikasi")
}

model UnitKompetensi {
  id                        String                    @id @default(uuid()) @map("id")
  id_skema_sertifikasi      String                    @map("id_skema_sertifikasi")
  kode_unit_kompetensi      String                    @unique @map("kode")
  nama_unit_kompetensi      String                    @map("nama")
  skema_sertifikasi         SkemaSertifikasi          @relation(fields: [id_skema_sertifikasi], references: [id], onDelete: Cascade)
  aktivitas_unit_kompetensi AktivitasUnitKompetensi[]
  pertanyaan_observasi      PertanyaanObservasi[]
  pertanyaan_esai           PertanyaanEsai[]
  pertanyaan_lisan          PertanyaanLisan[]
  pertanyaan_tertulis       PertanyaanTertulis[]

  @@map("unit_kompetensi")
}

model AktivitasUnitKompetensi {
  id                   String               @id @default(uuid()) @map("id")
  id_unit_kompetensi   String               @map("id_unit_kompetensi")
  elemen               String               @map("element")
  unit_kompetensi      UnitKompetensi       @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)
  kriteria_unjuk_kerja KriteriaUnjukKerja[]

  @@map("aktivitas_unit_kompetensi")
}

model KriteriaUnjukKerja {
  id                           String                  @id @default(uuid()) @map("id")
  id_aktivitas_unit_kompetensi String                  @map("id_aktivitas_unit_kompetensi")
  kriteria                     String                  @map("kriteria_unjuk_kerja")
  aktivitas_unit_kompetensi    AktivitasUnitKompetensi @relation(fields: [id_aktivitas_unit_kompetensi], references: [id], onDelete: Cascade)

  @@map("kriteria_unjuk_kerja")
}

model PertanyaanObservasi {
  id                 String         @id @default(uuid()) @map("id")
  id_unit_kompetensi String         @map("id_unit_kompetensi")
  pertanyaan         String         @map("pertanyaan")
  unit_kompetensi    UnitKompetensi @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)

  @@map("pertanyaan_observasi")
}

model PertanyaanEsai {
  id                 String         @id @default(uuid()) @map("id")
  id_unit_kompetensi String         @map("id_unit_kompetensi")
  pertanyaan         String         @map("pertanyaan")
  jawaban            String         @map("jawaban")
  unit_kompetensi    UnitKompetensi @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)

  @@map("pertanyaan_esai")
}

model PertanyaanLisan {
  id                 String         @id @default(uuid()) @map("id")
  id_unit_kompetensi String         @map("id_unit_kompetensi")
  pertanyaan         String         @map("pertanyaan")
  jawaban            String         @map("jawaban")
  unit_kompetensi    UnitKompetensi @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)

  @@map("pertanyaan_lisan")
}

model PertanyaanTertulis {
  id                          String                      @id @default(uuid()) @map("id")
  id_unit_kompetensi          String                      @map("id_unit_kompetensi")
  pertanyaan                  String                      @map("pertanyaan")
  unit_kompetensi             UnitKompetensi              @relation(fields: [id_unit_kompetensi], references: [id], onDelete: Cascade)
  jawaban_pertanyaan_tertulis JawabanPertanyaanTertulis[]

  @@map("pertanyaan_tertulis")
}

model JawabanPertanyaanTertulis {
  id                     String             @id @default(uuid()) @map("id")
  id_pertanyaan_tertulis String             @map("id_pertanyaan_tulis")
  jawaban                String             @map("jawaban")
  benar                  Boolean            @map("benar")
  pertanyaan_tertulis    PertanyaanTertulis @relation(fields: [id_pertanyaan_tertulis], references: [id], onDelete: Cascade)

  @@map("jawaban_pertanyaan_tertulis")
}

enum Role {
  Peserta
  Asesor
  Administrator
}
